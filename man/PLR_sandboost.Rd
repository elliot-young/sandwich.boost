% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{PLR_sandboost}
\alias{PLR_sandboost}
\title{Sandwich Boosting Estimator for the PLR Model}
\usage{
PLR_sandboost(
  l_formula,
  l_learner,
  m_formula,
  m_learner,
  s_formula,
  s_learner,
  proxyCCF = "equicorr",
  data,
  K = 5L,
  S = 5L,
  variable_steps = FALSE,
  m_stop = 100,
  lambda_s = 1,
  lambda_theta = 0.1,
  Lambda_s = c(0.01, 10),
  mu_s = 0.1,
  init_CCF = NULL
)
}
\arguments{
\item{l_formula}{a two-sided formula object describing the regression model for \eqn{E[Y|X=x]}.}

\item{l_learner}{a string specifying the regression method to fit the regression of \eqn{Y} on \eqn{X} as given by \code{l_formula}. Notable options are \code{gam} and \code{randomforest}}

\item{m_formula}{a two-sided formula object describing the regression model for \eqn{E[D|X=x]}.}

\item{m_learner}{a string specifying the regression method to fit the regression of \eqn{D} on \eqn{X} as given by \code{m_formula}.}

\item{s_formula}{a two-sided formula object describing the regression model for a single boosting iteration for \eqn{s}-function sandwich boosting.}

\item{s_learner}{a string specifying the regression method to fit the a single boosting iteration for \eqn{s}-function sandwich boosting as given by \code{l_formula}.}

\item{proxyCCF}{a string spescifying which working correlation parametrisation to use. Must take the form "\code{equicorr}", "\code{autoreg}" or "\code{nested}".}

\item{data}{a data frame containing the variables for the grouped PLR model. Note that group ID must be given by the column \code{id}.}

\item{K}{the number of folds used for cross-fitting. Default is 5.}

\item{S}{the number of repeats to mitigate the randomness in the estimator on the sample splits used for cross-fitting. Default is 5.}

\item{variable_steps}{whether sandwich boosting on the \eqn{s}-function is performed with fixed step size \eqn{\lambda_s} or variable step size. Default is \code{FALSE}.}

\item{m_stop}{maximum number of sandwich boosting iterations. The number of boosting iterations would therefore in practice be the minimum of value calculated by CV and \code{m_stop}. Default is 100}

\item{lambda_s}{fixed step size \eqn{\lambda_s} that is sued for \eqn{s}-function steps in sandwich boosting when \code{variable_steps=FALSE}. Default is 1}

\item{lambda_theta}{step size for \eqn{\theta}-gradient descent. Default is 0.1.}

\item{Lambda_s}{a closed set of positive step sizes to restrict step sizes for \eqn{s}-descent when \code{variable_steps=TRUE}. Default is \eqn{[0.01,10]}}

\item{mu_s}{shrinkage parameter \eqn{\mu_s\in[0,1]} for \eqn{s}-function sandwich boosting step. Default is 0.1.}

\item{init_CCF}{initalisation of weight class used for \eqn{(s,\theta)}-boosting. Default is \eqn{s=1} and \eqn{\theta=0} (\code{init_CCF = NULL}). Alternatives include "\code{mem}" and "\code{mem_int}" for mixed effects model .}
}
\value{
A list containing:
  \describe{
    \item{\code{beta_hat}}{The estimator for \eqn{\beta}.}
    \item{\code{std_err}}{Huber robust estimate of the standard error of the \eqn{\beta}-estimator.}
  }
}
\description{
Sandwich Boosting Estimator for the PLR Model
}
